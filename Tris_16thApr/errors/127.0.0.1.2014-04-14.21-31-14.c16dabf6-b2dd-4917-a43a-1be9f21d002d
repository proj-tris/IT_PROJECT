(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DAL' object has no attribute 'email'"
p3
sS'layer'
p4
S'/home/vamsee/web2py/applications/Tris/controllers/default.py'
p5
sS'code'
p6
S'    # -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\n\n@auth.requires_login()\ndef login_home():\n    return dict()\n\ndef text():\n    return dict()\n@auth.requires_login()\ndef upload_file():\n    form = SQLFORM(db.notes_upload)\n    form.process()\n    return dict(form = form)\n\n@auth.requires_login()\ndef view_uploads():\n    rows = db(db.email==auth.user.email).select(db.ALL)\n    return dict(rows = rows)\n@auth.requires_login()\ndef temp():\n    db.text1.insert(note=request.get_vars[\'note\'], font=request.get_vars[\'font\'], title=request.get_vars[\'title\'])\n    return dict()\n    \n@auth.requires_login()\ndef voice_upload():\n    return dict()\n@auth.requires_login()\ndef voicedb():\n    db.voice.insert(note=request.get_vars[\'text\'],title=request.get_vars[\'head\'])\n    return dict()\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(view_uploads)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/vamsee/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/vamsee/web2py/applications/Tris/controllers/default.py", line 106, in <module>\n  File "/home/vamsee/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/vamsee/web2py/gluon/tools.py", line 3259, in f\n    return action(*a, **b)\n  File "/home/vamsee/web2py/applications/Tris/controllers/default.py", line 39, in view_uploads\n    rows = db(db.email==auth.user.email).select(db.ALL)\n  File "/home/vamsee/web2py/gluon/dal.py", line 8329, in __getattr__\n    return ogetattr(self, key)\nAttributeError: \'DAL\' object has no attribute \'email\'\n'
p11
s.